#!/usr/bin/env node
var exec = require('child_process').exec;
var config = require('./config');
var processes = [];

pushItRealGood();

function pushItRealGood() {
  var args = process.argv.slice(2);
  return gitLogin(args).then(function() {
    return Promise.all([playMusic(), gitPush(args), echoLyrics()]).then(function(output) {
      console.log(output[1]);
      process.exit();
    });
  }).catch(function(err) {
    console.error(err.message || err);
    processes.forEach(function(child) {
      child.kill('SIGKILL');
    });
    process.exit(1);
  });
}

function gitLogin(args) {
  return promisify('git remote -v').then(function(remotes) {
    var promises = config.gitLogin(args, remotes.split('\n'));
    return promises.reduce(function(chain, command) {
      return chain.then(function() {
        return promisify(command);
      });
    }, Promise.resolve());
  });
}

function playMusic() {
  return promisify(config.playMusic());
}

function gitPush(args) {
  return promisify(config.gitPush(args));
}

function echoLyrics() {
  return Promise.all(config.lyrics().map(function(lyric) {
    return new Promise(function(resolve) {
      setTimeout(function() {
        resolve(console.log(lyric.lyric));
      }, lyric.timeout);
    });
  }));
}

function promisify(command) {
  return new Promise(function(resolve, reject) {
    var child = exec(command, function(err, stdout, out) {
      if (err) return reject(err);
      resolve(out || stdout);
    });
    processes.push(child);
  });
}
